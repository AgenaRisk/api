{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "agena.ai Structure Learning Pipeline Configuration Schema",
    "type": "object",
    "properties": {
        "dataFilePath": {
            "type": "string",
            "description": "Path to the input data file (relative or absolute)."
        },
        "outputDirPath": {
            "type": "string",
            "description": "Path to the output directory (relative or absolute)."
        },
        "printSummary": {
            "type": "boolean",
            "default": false,
            "description": "Flag to indicate whether to print a summary of discovery and evaluation."
        },
        "saveSummary": {
            "type": "boolean",
            "default": false,
            "description": "Flag to indicate whether to save a CSV summary of discovery and evaluation."
        },
        "pipeline": {
            "type": "array",
            "description": "Sequence of pipeline stages.",
            "items": {
                "type": "object",
                "properties": {
                    "stage": {
                        "type": "string",
                        "enum": [
                            "generation",
                            "discovery",
                            "averaging",
                            "structureEvaluation",
                            "merger",
                            "tableLearning"
                        ],
                        "description": "Pipeline stage type."
                    },
                    "algorithm": {
                        "type": "string",
                        "enum": [
                            "HC",
                            "SaiyanH",
                            "GES",
                            "TABU",
                            "MAHC"
                        ],
                        "description": "Algorithm used for the stage (if applicable)."
                    },
                    "label": {
                        "type": "string",
                        "description": "Label for this stage."
                    },
                    "knowledge": {
                        "type": "object",
                        "description": "Prior knowledge configuration and constraints. Applies when stage is `discovery` or `tableLearning`.",
                        "properties": {
                            "connectionsDirected": {
                                "type": "array",
                                "items": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "description": "Directed edges."
                            },
                            "connectionsUndirected": {
                                "type": "array",
                                "items": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "description": "Undirected edges."
                            },
                            "connectionsForbidden": {
                                "type": "array",
                                "items": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "description": "Forbidden connections."
                            },
                            "connectionsTemporal": {
                                "type": "array",
                                "items": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "description": "Temporal orderings (array of tiers, each tier is an array of variables in that tier)."
                            },
                            "prohibitConnectionsSameTemporalTier": {
                                "type": "boolean",
                                "description": "Disallow connections within the same tier.",
                                "default": false
                            },
                            "connectionsInitialGuess": {
                                "type": "array",
                                "items": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "description": "Initial connection guesses, which may inform the starting point of discovery but are not required to appear in the final structure."
                            },
                            "variablesAreRelevant": {
                                "type": "boolean",
                                "default": false,
                                "description": "Mark all variables as relevant, which prohibits islands of variables."
                            },
                            "reduceDimensionalityPenaltyForVariables": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                },
                                "description": "Variables for which dimensionality penalty is reduced."
                            },
                            "skipNodes": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                },
                                "description": "List of nodes to skip from structure learning."
                            },
                            "nodeDataWeightsCustom": {
                                "type": "array",
                                "items": {
                                    "type": "array",
                                    "items": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "number"
                                        }
                                    ],
                                    "minItems": 2,
                                    "maxItems": 2
                                },
                                "description": "Custom data weights per node. Each item must be a [string, number] pair."
                            }
                        },
                        "dimensionalityReductionRate": {
                            "type": "integer",
                            "minimum": 2,
                            "maximum": 30,
                            "description": "Rate of dimensionality reduction. Must be between 2 and 30."
                        },
                        "maxInDegreePreProcessing": {
                            "type": "integer",
                            "enum": [
                                2,
                                3
                            ],
                            "default": 3,
                            "description": "Maximum in-degree before processing."
                        },
                        "dataWeight": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 1,
                            "description": "Relative weight of this knowledge entry when used for model estimation. Must be between 0 and 1."
                        }
                    }
                },
                "parameters": {
                    "type": "object",
                    "description": "Stage-specific parameters.",
                    "properties": {
                        "pruningLevel": {
                            "type": "integer",
                            "default": 0,
                            "minimum": 0,
                            "maximum": 3
                        },
                        "bicLog": {
                            "type": "string",
                            "enum": [
                                "2",
                                "10",
                                "e"
                            ]
                        },
                        "logLikelihoodScore": {
                            "type": "boolean",
                            "default": false
                        },
                        "minimumEdgeAppearanceCountToKeep": {
                            "type": "integer",
                            "minimum": 1,
                            "default": 1
                        },
                        "statesFromData": {
                            "type": "boolean",
                            "default": false,
                            "description": "When set to true during generation, whole training dataset is processed to collect unique states and configure nodes accordingly."
                        },
                        "dataPath": {
                            "type": "string",
                            "description": "Path to the data file (relative or absolute). When used with generation stage, this file informs the states to be created for relevant variables. When used with evaluation stage, this file will be used to evaluate the models against. When used in tableLearning stage, this data is used to learn state probabilities using EM algorithm."
                        },
                        "maximumEdgeCount": {
                            "type": "integer",
                            "default": 0,
                            "description": "Maximum number of edges for generation."
                        },
                        "maximumMeanDiscrepancyType": {
                            "type": "string",
                            "enum": [
                                "Mutual_Information",
                                "Mean_Absolute",
                                "Max_Absolute",
                                "MeanMax_Absolute",
                                "Mean_Relative",
                                "Max_Relative"
                            ],
                            "default": "Mean_Absolute",
                            "description": "Maximum Mean Discrepancy (MMD) type and Score and Distance types for SaiyanH."
                        },
                        "modelStageLabel": {
                            "type": "string",
                            "description": "Label of the model stage to which this table learning step applies. Required when stage is `tableLearning`."
                        },
                        "missingValue": {
                            "type": "string",
                            "default": "",
                            "description": "Symbol used to represent missing values. Applies to `tableLearning`."
                        },
                        "valueSeparator": {
                            "type": "string",
                            "default": ",",
                            "description": "Separator character for values in the input file. Applies to `tableLearning`."
                        },
                        "maxIterations": {
                            "type": "integer",
                            "minimum": 0,
                            "maximum": 50,
                            "description": "Maximum number of iterations before EM algorithm stops even if not converged."
                        },
                        "convergenceThreshold": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 1,
                            "description": "Convergence threshold between 0 and 1. Once the entropy error is below this threshold, the EM algorithm is considered converged and stops."
                        }
                    }
                }
            },
            "required": [
                "stage"
            ],
            "allOf": [
                {
                    "if": {
                        "properties": {
                            "stage": {
                                "const": "tableLearning"
                            }
                        }
                    },
                    "then": {
                        "properties": {
                            "parameters": {
                                "required": [
                                    "modelStageLabel"
                                ]
                            }
                        }
                    }
                },
                {
                    "if": {
                        "properties": {
                            "stage": {
                                "const": "discovery"
                            }
                        }
                    },
                    "then": {
                        "required": [
                            "algorithm"
                        ]
                    }
                }
            ]
        }
    },
    "required": [
        "dataFilePath",
        "outputDirPath",
        "pipeline"
    ]
}