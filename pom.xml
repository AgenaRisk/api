<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	
	<properties>
		<!-- Change these versions if you need a specific build -->
		<!-- Default settings are configured for latest development version -->
		<version.com.agenarisk.core>master-SNAPSHOT</version.com.agenarisk.core>
		
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
	</properties>
	
	<groupId>com.agenarisk</groupId>
	<artifactId>com.agenarisk.api</artifactId>
	<version>0.92-SNAPSHOT</version>
	<packaging>jar</packaging>
	
	<repositories>
		<repository>
			<id>archiva.internal</id>
			<name>Internal Release Repository</name>
			<url>http://mvn.agenarisk.com/repository/internal/</url>
		</repository>
		
		<repository>
			<id>archiva.snapshots</id>
			<name>Internal Release Repository</name>
			<url>http://mvn.agenarisk.com/repository/snapshots/</url>
		</repository>
	</repositories>
	
	<distributionManagement>
		<repository>
			<id>archiva.internal</id>
			<name>Internal Release Repository</name>
			<url>http://mvn.agenarisk.com/repository/internal/</url>
		</repository>
		<snapshotRepository>
			<id>archiva.snapshots</id>
			<name>Internal Snapshot Repository</name>
			<url>http://mvn.agenarisk.com/repository/snapshots/</url>
		</snapshotRepository>
	</distributionManagement>
	
	<dependencies>
		<dependency>
			<groupId>com.agenarisk</groupId>
			<artifactId>com.agenarisk.core</artifactId>
			<version>${version.com.agenarisk.core}</version>
		</dependency>
		
		<dependency>
			<groupId>commons-cli</groupId>
			<artifactId>commons-cli</artifactId>
			<version>1.4</version>
		</dependency>
		
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-core</artifactId>
			<version>1.3</version>
			<scope>test</scope>
		</dependency>
		
	</dependencies>
  
	<build>
		
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
				
		<plugins>
			
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>3.1.1</version>
				<configuration>
					<archive>
						<manifest>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
							<addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
							<addClasspath>true</addClasspath>
							<classpathPrefix>lib/</classpathPrefix>
							<mainClass>com.agenarisk.api.util.Launcher</mainClass>
						</manifest>
						<manifestEntries>
							<Built-By>Agena</Built-By>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>
			
			<!-- Download natively compiled dependencies -->
			<!-- Only required to run AgenaRisk Core (which would be run on testing) -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>wagon-maven-plugin</artifactId>
				<version>2.0.0</version>
				<executions>
					<execution>
						<!-- Download product dat -->
						<id>download-product</id>
						<phase>clean</phase>
						<goals>
							<goal>download</goal>
						</goals>
						<configuration>
							<url>https://resources.agenarisk.com/products/developer</url>
							<toDir>${project.basedir}/lib</toDir>
						</configuration>
					</execution>
					
					<execution>
						<!-- Download Cryptlex dependencies -->
						<id>download-cryptlex</id>
						<phase>clean</phase>
						<goals>
							<goal>download</goal>
						</goals>
						<configuration>
							<url>https://resources.agenarisk.com/download/archive/lib</url>
							<includes>**</includes>
							<toDir>${project.basedir}/lib</toDir>
						</configuration>
					</execution>
				</executions>
			</plugin>
			
			<plugin>
				<!-- Copy all dependencies to target/lib -->
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/lib</outputDirectory>
							<includeScope>runtime</includeScope>
						</configuration>
					</execution>
				</executions>
			</plugin>
			
			<plugin> 
				<groupId>org.codehaus.mojo</groupId> 
				<artifactId>exec-maven-plugin</artifactId> 
				<version>1.6.0</version>
				<executions>
					<execution>
						<goals>
							<goal>java</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<mainClass>com.agenarisk.api.util.Launcher</mainClass>
				</configuration>
			</plugin>
			
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>3.1.1</version>
				<executions>
					<execution>
						<id>attach-javadocs</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		
		</plugins>
	</build>
  
</project>